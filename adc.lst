C51 COMPILER V9.00   ADC                                                                   03/09/2017 13:35:16 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\output\adc.obj
COMPILER INVOKED BY: D:\Keil_C51\C51\BIN\C51.EXE source\adc.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(.\adc.lst) OBJECT(.\
                    -output\adc.obj)

line level    source

   1          #include <CS1521.H>
   2          #include "adc.h"
   3          #include "cacul.h"
   4          #include "function.h"
   5          #include "config.h"
   6          #include "timer.h"
   7          
   8          enum chanl{ch_vp,ch_cp,ch_ts,ch_vdd18};
   9          uint16 buf[20];
  10          /***************************************
  11          输入：无
  12          输出：采集后的10位温度
  13          功能：采集来自晶体的温度对应的电压值,得到数字量
  14          ****************************************/
  15          #if MCU_temperture
  16          unsigned int MCU_Temp(void)
  17          {
  18   1          uint16 adcVal=0;  
  19   1      //      CLKC = 0x03;
  20   1              
  21   1              ADCR = 0xe0;    // setting,Enable ADC,fadc = fx/2
  22   1              TEMPC = 0x01;   //enable tempsensor and output
  23   1              ADCR = (ADCR & 0xf0) | (ch_ts & 0x0f);  // select channel ch_ts
  24   1              ADCR |= 0x10;   // start ADC
  25   1              while(!(ADCR & 0x08));  // wait ADC busy
  26   1              adcVal = (ADRH << 8) | ADRL;    // read ADC
  27   1      
  28   1      //      CLKC = 0x00;
  29   1              return  adcVal;
  30   1      
  31   1      }
  32          #else
              unsigned int  KDS_Temp(void)
              {
                  uint16 adcVal=0;
                      return adcVal;
              }
              
              #endif
  40          unsigned int  Temp_ADC(void)
  41          {
  42   1          #if MCU_temperture
  43   1              return MCU_Temp();
  44   1              #else
                              return KDS_Temp();
                      #endif
  47   1      }
  48          
  49          unsigned int Temp_Collect(void)
  50          {
  51   1              char data i,j;
  52   1              uint16 Data;
  53   1              long Sum=0;
  54   1              for(j=0;j<16;j++)
C51 COMPILER V9.00   ADC                                                                   03/09/2017 13:35:16 PAGE 2   

  55   1              {
  56   2                      for(i=0;i<20;i++)
  57   2                      {
  58   3                              buf[i]=Temp_ADC();
  59   3      
  60   3                      }
  61   2                      Insert_Sort(buf,20);
  62   2                      Data = (buf[6]+buf[7]+buf[8]+buf[9]+buf[10]+buf[11]+buf[12]+buf[13])>>3;
  63   2                      Sum += Data;
  64   2              }
  65   1              Data = Sum>>4;
  66   1              return(Data);
  67   1      }
  68          
  69          /*****************************************
  70          输入：无
  71          输出：采集10位cp电压
  72          功能：采集使晶体工作在中心频率的压控电压,得到数字量
  73          ******************************************/
  74          unsigned int Vcp_ADC(void)
  75          {
  76   1              uint16 adcVal=0;
  77   1      
  78   1          
  79   1              ADCR = 0xe0;    // setting,Enable ADC,fadc = fx/2
  80   1              ADCR = (ADCR & 0xf0) | (ch_cp & 0x0f);  // select channel ch_cp
  81   1              ADCR |= 0x10;   // start ADC
  82   1              while(!(ADCR & 0x08));  // wait ADC busy
  83   1              adcVal = (ADRH << 8) | ADRL;    // read ADC
  84   1              
  85   1              return  adcVal;
  86   1      }
  87          
  88          
  89          unsigned int Vcp_Collect(void)
  90          {
  91   1          char data i,j;
  92   1          uint16 Data;
  93   1          long Sum=0;
  94   1              for(j=0;j<16;j++)
  95   1              {
  96   2                      for(i=0;i<20;i++)
  97   2                      {
  98   3                              buf[i]=Vcp_ADC();
  99   3      
 100   3                      }
 101   2                      Insert_Sort(buf,20);
 102   2                      Data = (buf[6]+buf[7]+buf[8]+buf[9]+buf[10]+buf[11]+buf[12]+buf[13])>>3;
 103   2                      Sum += Data;
 104   2              }
 105   1              Data = Sum>>4;
 106   1              return(Data);
 107   1      }
 108          
 109          /**************************************
 110          输入：无
 111          输出：采集后的10位拉偏电压值
 112          功能：采集来自晶体的拉偏电压值，得到数字量
 113          **************************************/
 114          unsigned int Vpull_ADC(void)
 115          {       
 116   1              uint16 adcVal=0;
C51 COMPILER V9.00   ADC                                                                   03/09/2017 13:35:16 PAGE 3   

 117   1          
 118   1              ADCR = 0xe0;    // setting,Enable ADC,fadc = fx/2
 119   1              ADCR = (ADCR & 0xf0) | (ch_vp & 0x0f);  // select channel ch_vp  0
 120   1              ADCR |= 0x10;   // start ADC
 121   1              while(!(ADCR & 0x08));  // wait ADC busy
 122   1              adcVal = (ADRH << 8) | ADRL;    // read ADC
 123   1      
 124   1              return  adcVal;
 125   1      }
 126          
 127          unsigned int Vpull_Collect(void)
 128          {
 129   1          char data i,j;
 130   1          uint16 Data;
 131   1          long Sum=0;
 132   1              for(j=0;j<16;j++)
 133   1              {
 134   2                      for(i=0;i<20;i++)
 135   2                      {
 136   3                              buf[i]=Vpull_ADC();
 137   3      
 138   3                      }
 139   2                      Insert_Sort(buf,20);
 140   2                      Data = (buf[6]+buf[7]+buf[8]+buf[9]+buf[10]+buf[11]+buf[12]+buf[13])>>3;
 141   2                      Sum += Data;
 142   2              }
 143   1              Data = Sum>>4;
 144   1              return(Data);
 145   1      }
 146          void DAC_Output(uint16 Dacval)
 147          {
 148   1              DAH = (Dacval>>8)&0x0f;
 149   1              DAL = Dacval&0xff;
 150   1              DAH |= 0x10;                              //dac使能
 151   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    735    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     40      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
