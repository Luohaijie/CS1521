C51 COMPILER V9.00   FLASH                                                                 03/09/2017 13:35:18 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE FLASH
OBJECT MODULE PLACED IN .\output\flash.obj
COMPILER INVOKED BY: D:\Keil_C51\C51\BIN\C51.EXE source\flash.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(.\flash.lst) OBJEC
                    -T(.\output\flash.obj)

line level    source

   1          
   2          #include <CS1521.H>
   3          #include "flash.h"
   4          #include "function.h"
   5          
   6          
   7          unsigned char Flash_Read(uint16 addr)
   8          {               
   9   1              uchar aTemp;    
  10   1              aTemp = *((unsigned char code *)addr);
  11   1              return aTemp;           //Read data form code dat
  12   1      }
  13          
  14          /****************************************************************
  15          函数名：Flash读
  16          输入：要读的地址
  17          输出：无
  18          函数功能：从Flash指定的地址读出相应的数据，并放到相应变量中
  19          *****************************************************************/
  20          
  21          unsigned int Flash_Read_Int(uint16 addr)
  22          {       
  23   1              uchar j=0;
  24   1          uchar aTemp_H,aTemp_L; 
  25   1              uint16 aTemp;   
  26   1              aTemp_H = Flash_Read(addr);
  27   1              aTemp_L = Flash_Read(addr+1);
  28   1              aTemp =  aTemp_H*256+aTemp_L;
  29   1              return aTemp;           //Read data form code dat
  30   1      }
  31          /****************************************************************
  32          函数名：Flash写
  33          输入：要写入的地址和数据
  34          输出：无
  35          函数功能：给Flash指定的地址写入相应的数据
  36           ****************************************************************/
  37          
  38          void Flash_Write(uint16 addr,uchar dat)
  39          {            
  40   1              uchar j=0;
  41   1                      EEAH=addr>>8;                           //设置高8位地址
  42   1                      EEAL=addr&0xff;                 //低8位地址
  43   1                      EED=dat;
  44   1                      EEC = 0X01;     
  45   1                  j++;                                                                //此处不可修改
  46   1                      j--;                                                            //此处不可修改
  47   1              
  48   1                      
  49   1                      
  50   1      }
  51          
  52          /****************************************************************
  53          函数名：Flash擦出
  54          输入：要擦除的地址
C51 COMPILER V9.00   FLASH                                                                 03/09/2017 13:35:18 PAGE 2   

  55          输出：无
  56          函数功能：擦除Flash制定位置
  57          ****************************************************************/       
  58          void Flash_Erase(uint16 addr)
  59          {
  60   1      //      bit fgTemp =EAL;                        //Backup EA
  61   1      
  62   1      //      EAL =0; //Closed interrupt when operation Flash
  63   1              if((addr%1024)==0) {   
  64   2                      uchar j=0;
  65   2                      EEAH=addr>>8;                           //设置擦除扇区地址
  66   2                      EEAL=addr&0xff;
  67   2                      EED=0X00;
  68   2                      EEC=0X02;       
  69   2                      j++;                                                            //此处不可修改
  70   2                      j--;                                                            //此处不可修改
  71   2                }
  72   1      //      EAL =fgTemp;    //Recover EA
  73   1      }       


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    106    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
