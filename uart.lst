C51 COMPILER V9.00   UART                                                                  02/28/2017 15:36:32 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\output\uart.obj
COMPILER INVOKED BY: D:\Keil_C51\C51\BIN\C51.EXE source\uart.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(.\uart.lst) OBJECT(
                    -.\output\uart.obj)

line level    source

   1          #include <CS1521.H>
   2          #include "uart.h"
   3          #include "function.h"
   4          #include "timer.h"
   5          
   6          void Uart_Send(unsigned char *send_buff,uint16 len )
   7          {
   8   1              uint16 i;
   9   1              for(i=0;i<len;i++)
  10   1              {
  11   2                      USART_SendData(send_buff[i]);
  12   2              }
  13   1      }
  14          
  15          void USART_SendData(char data date)
  16          {
  17   1              
  18   1              S1BUF = date;
  19   1              while((S1CON & 0x02) == 0x00);
  20   1              S1CON &= 0xfd;  
  21   1      }
  22          
  23          void Uart_Init(void)
  24          {
  25   1              uint16 uartbd = 970;               //fclk = 10264092hz, buad = 19200
  26   1              S1CON=0x90;                     //UART1
  27   1              S1RELH = uartbd>>8;                //≤®Ãÿ¬ …Ë÷√
  28   1              S1RELL = uartbd&0xff;
  29   1          delay_ms(200);      //wait Boud rate overflow then load S1RELH,S1RELL
  30   1              
  31   1      }
  32          /*
  33          void UART_puts(char *pch)
  34          {
  35                  while(*pch != '\0')
  36                  {
  37                          USART_SendData(*pch);
  38                          pch++;
  39                  }
  40          }
  41          
  42          void printn(unsigned int n, unsigned int b)
  43          {
  44                  unsigned char ntab[17] = "0123456789ABCDEF";
  45                  unsigned int a, m;
  46                  if (n / b)
  47                  {
  48                          a = n / b;
  49                          printn(a, b);  
  50                  }
  51                  m = n % b;
  52                  USART_SendData(ntab[m]);
  53          }
  54          */         
C51 COMPILER V9.00   UART                                                                  02/28/2017 15:36:32 PAGE 2   

  55          /***********************************************************************************************
  56           ??:UART ?????
  57           ??:fmt ???????          
  58           ??:0
  59           ??:???C?????UART_printf ????? %d %l %o %x %s
  60          ************************************************************************************************/
  61          /*
  62          void UART_printf(char *fmt, ...)
  63          {
  64              char c;
  65              unsigned int *adx = (unsigned int*)(void*)&fmt + 1;
  66          _loop:
  67              while((c = *fmt++) != '%')
  68                          {
  69                  if (c == '\0') return;
  70                  USART_SendData(c);
  71              }
  72              c = *fmt++;
  73              if (c == 'd' || c == 'l')
  74                          {
  75                  printn(*adx, 10);
  76              }
  77              if (c == 'o' || c == 'x')
  78                          {
  79                  printn(*adx, c=='o'? 8:16 );
  80              }
  81              if (c == 's')
  82                          {
  83                                  UART_puts((char*)*adx);
  84              }
  85              adx++;
  86              goto _loop;
  87          }
  88           */ 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    107    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
