C51 COMPILER V9.00   UART                                                                  03/09/2017 13:35:19 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\output\uart.obj
COMPILER INVOKED BY: D:\Keil_C51\C51\BIN\C51.EXE source\uart.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(.\uart.lst) OBJECT(
                    -.\output\uart.obj)

line level    source

   1          #include <CS1521.H>
   2          #include "uart.h"
   3          #include "function.h"
   4          #include "timer.h"
   5          #include "config.h"
   6          
   7          void Uart_Send(unsigned char *send_buff,uint16 len )
   8          {
   9   1              uint16 i;
  10   1              for(i=0;i<len;i++)
  11   1              {
  12   2                      USART_SendData(send_buff[i]);
  13   2              }
  14   1      }
  15          
  16          void USART_SendData(char data date)
  17          {
  18   1      
  19   1              S1BUF = date;
  20   1              while((S1CON & 0x02) == 0x00);
  21   1              S1CON &= 0xfd;
  22   1      }
  23          
  24          void Uart_Init(void)
  25          {
  26   1              uint16 uartbd = 970;               //fclk = 10264092hz, buad = 19200
  27   1              S1CON=0x90;                     //UART1
  28   1              S1RELH = uartbd>>8;                //²¨ÌØÂÊÉèÖÃ
  29   1              S1RELL = uartbd&0xff;
  30   1          delay_ms(200);      //wait Boud rate overflow then load S1RELH,S1RELL
  31   1      
  32   1      }
  33          #if UART_PRINTF
              void UART_puts(char *pch)
              {
                      while(*pch != '\0')
                      {
                              USART_SendData(*pch);
                              pch++;
                      }
              }
              
              void printn(unsigned int n, unsigned int b)
              {
                      unsigned char ntab[17] = "0123456789ABCDEF";
                      unsigned char tab[11];
                      signed char i=0;
                      if(n==0) USART_SendData(ntab[0]);
                      while (n)
                      {
                              i++;
                              if(i==11)i=0;
                              tab[i]=ntab[n%b];
                              n = n / b;
C51 COMPILER V9.00   UART                                                                  03/09/2017 13:35:19 PAGE 2   

              
                      }
                      while(i>0)
                      {                                                          
                              USART_SendData(tab[i]);
                              i--;
                      }
              
              }
              
              
              void UART_printf(char *fmt, ...)
              {
                  char c;
                  unsigned int *adx = (unsigned int*)(void*)&fmt + 1;
              _loop:
                  while((c = *fmt++) != '%')
                              {
                      if (c == '\0') return;
                      USART_SendData(c);
                  }
                  c = *fmt++;
                  if (c == 'd' || c == 'l')                              
                              {
                      printn(*adx, 10);
                  }
                  if (c == 'o' || c == 'x')
                              {
                      printn(*adx, c=='o'? 8:16 );
                  }
                  if (c == 's')
                              {
                                      UART_puts((char*)*adx);
                  }
                  adx++;
                  goto _loop;
              }
              #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    107    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
