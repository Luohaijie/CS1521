C51 COMPILER V9.00   CACUL                                                                 03/09/2017 13:35:17 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE CACUL
OBJECT MODULE PLACED IN .\output\cacul.obj
COMPILER INVOKED BY: D:\Keil_C51\C51\BIN\C51.EXE source\cacul.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(.\cacul.lst) OBJEC
                    -T(.\output\cacul.obj)

line level    source

   1          #include "cacul.h"
   2          #include "timer.h"
   3          #include "adc.h"
   4          #include "flash.h"
   5          #include "function.h"
   6          /*******************************************************
   7          输入：no
   8          输出：K,B
   9          功能：计算Y=KX+B
  10          ********************************************************/
  11          /*
  12          void Calc_K_B_Tenbit(void)
  13          {
  14                  unsigned int vcp500,vcp1500;
  15                  unsigned int i;
  16                  unsigned int temp_buff[10];
  17          
  18                  
  19                  PWM_Init(300);
  20                  delay_ms(500);
  21                  
  22                  for(i=0;i<10;i++)
  23                  {
  24                          temp_buff[i]=Vcp_Collect()/2;
  25                          delay_ms(1);
  26                  }
  27              Insert_Sort(temp_buff,10);
  28              vcp500 = (temp_buff[4]+temp_buff[5]+temp_buff[6]+temp_buff[7])>>2;
  29                  PWM_Init(800);
  30                  delay_ms(500);                          
  31                  for(i=0;i<10;i++)
  32                  {
  33                          temp_buff[i]=Vcp_Collect()/2;
  34                          delay_ms(1);
  35                  }
  36              Insert_Sort(temp_buff,10);
  37                  vcp1500 = (temp_buff[4]+temp_buff[5]+temp_buff[6]+temp_buff[7])>>2;
  38                  K = 500.00/(vcp1500-vcp500); 
  39                  Badd =300-(int)(K*vcp500);
  40                  
  41          
  42          }
  43          void Calc_K_B_Elebit(void)
  44          {
  45                  unsigned int vcp500,vcp1500;
  46                  unsigned int i;
  47                  unsigned int temp_buff[10];
  48          
  49                  
  50                  Pwm_Load(500);
  51                  delay_ms(500);
  52                  
  53                  for(i=0;i<10;i++)
  54                  {
C51 COMPILER V9.00   CACUL                                                                 03/09/2017 13:35:17 PAGE 2   

  55                          temp_buff[i]=Vcp_Collect();
  56                          delay_ms(1);
  57                  }
  58              Insert_Sort(temp_buff,10);
  59              vcp500 = (temp_buff[4]+temp_buff[5]+temp_buff[6]+temp_buff[7])>>2;
  60                  Pwm_Load(1500);
  61                  delay_ms(500);                          
  62                  for(i=0;i<10;i++)
  63                  {
  64                          temp_buff[i]=Vcp_Collect();
  65                          delay_ms(1);
  66                  }
  67              Insert_Sort(temp_buff,10);
  68                  vcp1500 = (temp_buff[4]+temp_buff[5]+temp_buff[6]+temp_buff[7])>>2;
  69                  K = 1000.00/(vcp1500-vcp500); 
  70                  Badd =500-(int)(K*vcp500);
  71          }
  72          */
  73          void Calc_K_B(void)
  74          {
  75   1              uint16 temp,table[10];
  76   1              uchar i;
  77   1      /*
  78   1              #if TEN_BIT
  79   1                      Calc_K_B_Tenbit();
  80   1              #else
  81   1                      Calc_K_B_Elebit();
  82   1              #endif
  83   1      */
  84   1              K=1.0;
  85   1              DAC_Output(2000);
  86   1              for(i=0;i<10;i++){
  87   2                      table[i] = Vcp_Collect();
  88   2                      delay_ms(100);           
  89   2              }
  90   1              Insert_Sort(table,10);
  91   1              temp = (table[3]+table[4]+table[5]+table[6])/4;
  92   1              Badd = (int)(2000-temp);
  93   1      
  94   1      }
  95          
  96          /***************************************
  97          输入：数据和大小
  98          输出：无
  99          功能：冒泡排序
 100          ****************************************/
 101          void Insert_Sort (unsigned int *Data,unsigned short size) 
 102          { 
 103   1               int16 temp;
 104   1               int16 j;
 105   1               int16 i;
 106   1               char data flag = 0;
 107   1              for (i = 0; i < size-1; i++) 
 108   1              {  
 109   2                      flag = 0;
 110   2                      for (j=0; j<size-i-1; j++)
 111   2                      {
 112   3                              if(Data[j]>Data[j+1])
 113   3                              {
 114   4                                      temp = Data[j+1];
 115   4                              Data[j+1] = Data[j];
 116   4                              Data[j] = temp;
C51 COMPILER V9.00   CACUL                                                                 03/09/2017 13:35:17 PAGE 3   

 117   4                                      flag = 1;
 118   4                              }
 119   3                      }
 120   2                      if(flag==0)
 121   2                      {
 122   3                              break;
 123   3                      }
 124   2              }
 125   1      } 
 126          /********************************************************************
 127          函数名：
 128          输入：
 129          输出：
 130          作用：拟合曲线
 131          ********************************************************************/
 132          /*
 133          void Line_Fitting(unsigned int databuf[],unsigned char first_flag,unsigned char length)
 134          {
 135                  
 136                  unsigned int first_val,last_val;
 137                  float temp_val;
 138                  unsigned char i;
 139                  first_val = databuf[first_flag];
 140                  last_val = databuf[length];
 141                  if(last_val>first_val)
 142                  {
 143                          temp_val = (last_val-first_val)/(length-first_flag);
 144                          for(i=first_flag;i<=length;i++)
 145                          databuf[i+1]=(int)(databuf[first_flag]+i*temp_val);
 146                  }
 147                  else 
 148                  {
 149                          temp_val = (first_val-last_val)/(length-first_flag);
 150                          for(i=first_flag;i<length;i++)
 151                          databuf[i+1]=(int)(databuf[first_flag]-i*temp_val);
 152                  }
 153          
 154          }               */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    372    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      30
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
